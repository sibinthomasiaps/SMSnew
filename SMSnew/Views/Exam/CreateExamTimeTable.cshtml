@model SMSnew.Models.Exam
@{
    ViewBag.Title = "div";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}





@using (Html.BeginForm())
{
        <!-- Container fluid  -->
        <!-- ============================================================== -->
    <div class="container-fluid">
        <!-- ============================================================== -->
        <!-- Start Page Content -->
        <!-- ============================================================== -->
        <!-- Row -->
        <div class="row">
            <div class="col-lg-12">
                <div class="card card-outline-info">
                    <div class="card-header">
                        <h4 class="m-b-0 text-white">Exam TimeTable</h4>
                    </div>
                    <div class="card-body">
                        <div class="form-body">
                            <h3 class="card-title">Create Exam TimeTable</h3>
                            <hr />
                            <div class="row p-t-20">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.SubjectClass, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <label class="control-label">Class</label>
                                        @Html.DropDownListFor(model => model.ExamName, ViewBag.examname as SelectList, "---Select Exam---", new { @class = "form-control", @required = "required" })
                                    </div>
                                </div>
                                <!--/span-->
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.SubjectName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <label class="control-label">Class</label>
                                        @Html.DropDownListFor(model => model.ExamClass, ViewBag.classname as SelectList, "---Select Class---", new { @class = "form-control", @required = "required" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                            <input type="hidden" id="count" name="count" />  
               
                        
                            <form class="form-material m-t-40">
                                <div class="form-group">
                                    <table id="table" style="display:none;" class="table color-table muted-table"></table>
                                    <div class="form-actions">
                                        <button class="btn btn-info waves-effect waves-light" type="submit" id="submit" name="submit" style="background-color: #0c4e90;border: 1px solid #0c4e90;color:#ffffff; display:none" onclick="getvalues()"><span class="btn-label"><i class="fa fa-check"></i></span>Save</button>
                                        <button class="btn btn-info waves-effect waves-light" type="submit" id="cancel" name="cancel" onclick="document.location.reload(true)" style="background-color:#2f3d4a;border: 1px solid #2f3d4a;color:#ffffff; display:none"><span class="btn-label"><i class="fa fa-close"></i></span>Cancel</button>
                                        @*<input type="button" name="submit" id="submit" value="Save" class="btn btn-success" style="display:none" onclick="getvalues()" />*@
                                        @*<button type="submit" class="btn btn-success" id="submit" style="display:none" onclick="getvalues()"> <i class="fa fa-check"></i> Save</button>*@
                                        @*<button type="button" class="btn btn-inverse">Cancel</button>*@
                                        @*<input type="text" class="form-control form-control-line" value="Some text value...">*@
                                    </div>
                               </div>    
                           </form>
                        </div>

            </div>
        </div>

    </div>
}
@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#ExamClass").change(function () {
                $.get("/Exam/CheckExTT", { ExamClass: $("#ExamClass").val(), ExamName: $("#ExamName").val() }, function (datamsg) {
                    var msg = datamsg.Success;
                    if (msg == "False") {
                        alert(datamsg.Message);
                    }
                    else {
                        $.get("/Exam/GetExamSubjectList", { ExamClass: $("#ExamClass").val() }, function (data1) {
                            var len = data1.length;
                            document.getElementById('count').value = len;
                            var txt = "<thead><tr><th>Subject</th><th>Date</th><th>MinMark</th><th>MaxMark</th></tr></thead>";
                            for (var i = 0; i < len; i++) {
                                txt += "<tbody><tr><td><input type='text' name='subject" + [i] + "' id='subject" + [i] + "' value='" + data1[i].SubjectName + "' readonly class='form-control form-control-line' style='background-color: #fff;color: #67757c;' />" + "</td><td><input type='date' name='exmdate" + [i] + "' id='exmdate" + [i] + "' class='form-control form-control-line'/>" + "</td><td><input type='text' name='mintxt" + [i] + "' id='mintxt" + [i] + "' class='form-control form-control-line' />" + "</td><td><input type='text' name='maxtxt" + [i] + "' id='maxtxt" + [i] + "' class='form-control form-control-line' />" + "</td></tr></tbody>";

                            }
                            if (txt != "") {
                                $('#table').empty();
                                $("#table").append(txt);
                                $("#table").css('display', 'block')
                                $("#submit").css('display', 'block')
                                $("#cancel").css('display', 'block')
                            }

                        });
                    }
                });
            });
        });
    </script>
    <script type="text/javascript">
        function getvalues() {
            var length = document.getElementById('count').value;
            var s = [];
            var d = [];
            var mi = [];
            var ma = [];
            for (i = 0; i < length; i++) {
                s.push(document.getElementById('subject' + [i]).value);
                d.push(document.getElementById('exmdate' + [i]).value);
                mi.push(document.getElementById('mintxt' + [i]).value);
                ma.push(document.getElementById('maxtxt' + [i]).value);
            }
            var examname = document.getElementById("ExamName").value;
            var classname = document.getElementById("ExamClass").value;
            window.location = "/Leave/ExamTTInsert?Examname=" + examname + "&Classname=" + classname + "&Subject=" + s + "&Date=" + d + "&Min=" + mi + "&Max=" + ma + "&Count=" + length;
        }
    </script>
}